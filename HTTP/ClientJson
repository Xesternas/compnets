#include <winsock2.h>
#include <string>
#include <iostream>
#pragma comment (lib, "Ws2_32.lib")
#define _WINSOCK_DEPRECATED_NO_WARNINGS
#pragma warning(disable: 4996)
#define request "GET / HTTP/1.0 \r\nHost: www.json.org \r\n\r\n"
#define MAX_PACKET_SIZE 65535
using namespace std;

int main() {
	WSADATA ws;
	SOCKET s;
	sockaddr_in adr;
	hostent* hn;
	char buff[MAX_PACKET_SIZE];

	if (WSAStartup(0x0101, &ws) != 0) { return -1; }

	if (INVALID_SOCKET == (s = socket(AF_INET, SOCK_STREAM, 0))) { return -1; }

	if (NULL == (hn = gethostbyname("www.json.org"))) { return -1; }

	adr.sin_family = AF_INET;
	((unsigned long*)&adr.sin_addr)[0] = ((unsigned long**)hn->h_addr_list)[0][0];
	adr.sin_port = htons(80);
	if (SOCKET_ERROR == connect(s, (sockaddr*)&adr, sizeof(adr))) { int res = WSAGetLastError(); return -1; }

	if (SOCKET_ERROR == send(s, (char*)&request, sizeof(request), 0)) { int res = WSAGetLastError(); return -1; }


	int len = 0;
	do {
		if (SOCKET_ERROR == (len = recv(s, (char*)&buff, MAX_PACKET_SIZE, 0)))
		{
			int res = WSAGetLastError();
			return -1;
		}
		buff[len] = 0;
		cout << buff;
	} while (len != 0);

	if (SOCKET_ERROR == closesocket(s))
	{
		return -1;
	}

	return 1;
}
